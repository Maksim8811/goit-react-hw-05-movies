{"version":3,"file":"static/js/247.854c88ca.chunk.js","mappings":"yNAkDA,UA5Cc,WAEV,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAmBP,OAhBAE,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAQJ,GAFjB,OAEJF,EAFI,OAGVC,EAAQD,GAHE,gDAMVO,QAAQC,IAAR,MANU,yDAAH,qDASfH,GAEC,GAAE,CAACH,KAIJ,+BACA,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,SACCV,EAAKW,KAAI,YAAmD,IAAjDC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACtC,OACI,yBACI,2BACI,gBAAKC,IAAKD,EAAY,0CACoBA,GACnC,sCAAuCE,IAAKJ,KACnD,0BAAG,kCAAH,IAAkBA,MAClB,0BAAG,sCAAH,IAAsBC,SANrBF,EAWhB,OAIR,C,+LC9CKM,EAAM,mCAGCC,EAAiB,mCAAG,sGACXC,EAAAA,EAAAA,IAAA,gEAAmEF,IADxD,uBACzBG,EADyB,EACzBA,KADyB,kBAEzBA,EAAKC,SAFoB,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMrB,GAAN,yFACFkB,EAAAA,EAAAA,IAAA,6CAAgDlB,EAAhD,oBAAmEgB,EAAnE,oBADE,uBAChBG,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKXf,EAAO,mCAAG,WAAMJ,GAAN,yFACEkB,EAAAA,EAAAA,IAAA,6CAAgDlB,EAAhD,4BAA2EgB,EAA3E,oBADF,uBACZG,EADY,EACZA,KADY,kBAGZA,EAAKrB,MAHO,2CAAH,sDAMPwB,EAAU,mCAAG,WAAMtB,GAAN,yFACDkB,EAAAA,EAAAA,IAAA,6CAAgDlB,EAAhD,4BAA2EgB,EAA3E,2BADC,uBACfG,EADe,EACfA,KADe,kBAEfA,EAAKC,SAFU,2CAAH,sDAMVG,EAAe,mCAAG,WAAMC,GAAN,yFAENN,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EQ,EAA5E,+CAFM,uBAEpBL,EAFoB,EAEpBA,KAFoB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["components/Cast/Cast.jsx","servise.jsx"],"sourcesContent":["import { Suspense } from \"react\"\nimport { useParams} from 'react-router-dom';\nimport {useEffect, useState } from \"react\"\nimport {getCast} from \"../../servise\"\n\n\n const Cast = () => {\n\n    const [cast, setCast] = useState([])\n    const {movieId} = useParams()\n   \n\n    useEffect(() => {\n       \n        const fetchCast = async () => {\n            try {\n                const cast = await getCast(movieId)\n                setCast(cast)\n            }\n            catch (err) {\n                console.log(err)\n            }\n        }\n        fetchCast()\n\n        }, [movieId])\n\n\n    return (\n        <>\n        <Suspense fallback={<div>Loading...</div>}>\n        {cast.map(({id, original_name, character, profile_path}) => {\n            return (\n                <ul key={id}>\n                    <li>\n                        <img src={profile_path\n                             ? `https://image.tmdb.org/t/p/w200/${profile_path}` \n                             : 'https://via.placeholder.com/182x273'} alt={original_name}/>\n                        <p><b>Actor:</b> {original_name}</p>\n                        <p><b>Character:</b> {character}</p>\n                    </li>\n                </ul>\n                \n            )\n        })}\n        </Suspense>\n        </>\n    )\n}\n\nexport default Cast","import axios from \"axios\"\n\nconst KEY = \"0374e7ed31d5e8507eaf6ae86e4e0e15\"\n\n\nexport const getTrendingMovies = async() => {\n const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n return data.results\n}\n\nexport const getMoviesId = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US` )\n    return data \n}\n\nexport const getCast = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n   \n    return data.cast\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return data.results\n\n}\n\nexport const getSearchMovies = async query => {\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`)\n  \n    // console.log('nameMovie', data.results)\n    return data.results\n}\n\n\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchCast","getCast","console","log","Suspense","fallback","map","id","original_name","character","profile_path","src","alt","KEY","getTrendingMovies","axios","data","results","getMoviesId","getReviews","getSearchMovies","query"],"sourceRoot":""}