{"version":3,"file":"static/js/186.c5e391bf.chunk.js","mappings":"yNAgDA,UA3CiB,WAEb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAgBP,OAdAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAESC,EAAAA,EAAAA,IAAWJ,GAFpB,OAEPF,EAFO,OAGbC,EAAWD,GAHE,gDAMbO,QAAQC,IAAI,MAAZ,MANa,yDAAH,qDAUlBH,GACH,GAAE,CAACH,IAImB,IAAnBF,EAAQS,QACT,wCAAwB,+BACxB,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,SACEX,EAAQY,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,QAEvB,OADAR,QAAQC,IAAI,UAAWR,IAEnB,yBACI,2BACI,0BAAG,oCAAgBa,MACnB,uBAAIE,QAHHD,EAOhB,OAOR,C,+LC5CKE,EAAM,mCAGCC,EAAiB,mCAAG,sGACXC,EAAAA,EAAAA,IAAA,gEAAmEF,IADxD,uBACzBG,EADyB,EACzBA,KADyB,kBAEzBA,EAAKC,SAFoB,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMnB,GAAN,yFACFgB,EAAAA,EAAAA,IAAA,6CAAgDhB,EAAhD,oBAAmEc,EAAnE,oBADE,uBAChBG,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKXG,EAAO,mCAAG,WAAMpB,GAAN,yFACEgB,EAAAA,EAAAA,IAAA,6CAAgDhB,EAAhD,4BAA2Ec,EAA3E,oBADF,uBACZG,EADY,EACZA,KADY,kBAGZA,EAAKI,MAHO,2CAAH,sDAMPjB,EAAU,mCAAG,WAAMJ,GAAN,yFACDgB,EAAAA,EAAAA,IAAA,6CAAgDhB,EAAhD,4BAA2Ec,EAA3E,2BADC,uBACfG,EADe,EACfA,KADe,kBAEfA,EAAKC,SAFU,2CAAH,sDAMVI,EAAe,mCAAG,WAAMC,GAAN,yFAENP,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4ES,EAA5E,+CAFM,uBAEpBN,EAFoB,EAEpBA,KAFoB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","servise.jsx"],"sourcesContent":["import { Suspense } from \"react\"\nimport { useParams} from 'react-router-dom';\nimport {useEffect, useState } from \"react\"\nimport {getReviews} from \"../../servise\"\n\n const Reviews = () => {\n\n    const [reviews, setReviews] = useState([])\n    const {movieId} = useParams()\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const reviews = await getReviews(movieId)\n                setReviews(reviews)\n            }\n            catch (err) {\n                console.log('err', err)\n            }\n        }\n\n        fetchReviews()\n    }, [movieId])\n\n    return ( \n        \n        reviews.length === 0 ? (\n       <p>No reviews!</p> ) : (<> \n       <Suspense fallback={<div>Loading...</div>}>       \n        {reviews.map(({author, id, content}) => {\n            console.log('reviews', reviews)\n            return (\n                <ul key={id}>\n                    <li>\n                        <p><b>Author: </b>{author}</p>\n                        <p>{content}</p>\n                    </li>\n                </ul>\n            )\n        })}\n        </Suspense>    \n        </>\n       ) \n    \n    )\n\n}\n\nexport default Reviews","import axios from \"axios\"\n\nconst KEY = \"0374e7ed31d5e8507eaf6ae86e4e0e15\"\n\n\nexport const getTrendingMovies = async() => {\n const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n return data.results\n}\n\nexport const getMoviesId = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US` )\n    return data \n}\n\nexport const getCast = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n   \n    return data.cast\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return data.results\n\n}\n\nexport const getSearchMovies = async query => {\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`)\n  \n    // console.log('nameMovie', data.results)\n    return data.results\n}\n\n\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","getReviews","console","log","length","Suspense","fallback","map","author","id","content","KEY","getTrendingMovies","axios","data","results","getMoviesId","getCast","cast","getSearchMovies","query"],"sourceRoot":""}