{"version":3,"file":"static/js/410.39ebe202.chunk.js","mappings":"uQAmDA,EA5CgB,WAAO,IAAD,EAClB,GAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAW,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,IAEjDC,EAAAA,EAAAA,YAAU,WAEP,IAAOC,EAAe,mCAAG,8GAEAC,EAAAA,EAAAA,IAAgBJ,GAFhB,OAEfK,EAFe,OAGrBT,EAAcS,GAHO,gDAMrBC,QAAQC,IAAR,MANqB,yDAAH,qDAStBJ,GACD,GAAC,CAACH,IAOH,OACE,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,iBAAKC,UAAU,eAAf,WACA,kBAAMC,SAAU,kBARCC,EAQkBZ,GAPnCa,sBACFd,EAAgB,CAACe,MAAOF,EAAEG,OAAOC,QAFd,IAAAJ,CAQD,EAAhB,WACA,kBACAK,KAAK,OACLC,KAAK,QACLC,YAAY,gBAGZ,mBAAQF,KAAK,SAASP,UAAU,gBAAhC,wBAID,SAACU,EAAA,EAAD,CAAUf,OAAQV,QAIxB,C,oFC9BD,EAfkB,SAAC,GAAc,IAAbU,EAAY,EAAZA,OACVgB,GAAWC,EAAAA,EAAAA,MAEjB,OACI,8BACCjB,EAAOkB,KAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,eAAgBP,EAAU,EAAVA,KAC9B,OACI,yBACI,yBAAI,SAAC,KAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAAWX,UAAU,OAA9D,SAAsEe,GAAkBP,OADvFM,EAIhB,KAGR,C,+LChBKK,EAAM,mCAGCC,EAAiB,mCAAG,sGACXC,EAAAA,EAAAA,IAAA,gEAAmEF,IADxD,uBACzBG,EADyB,EACzBA,KADyB,kBAEzBA,EAAKC,SAFoB,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,oBAAmEN,EAAnE,oBADE,uBAChBG,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKXI,EAAO,mCAAG,WAAMD,GAAN,yFACEJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAA2EN,EAA3E,oBADF,uBACZG,EADY,EACZA,KADY,kBAGZA,EAAKK,MAHO,2CAAH,sDAMPC,EAAU,mCAAG,WAAMH,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAA2EN,EAA3E,2BADC,uBACfG,EADe,EACfA,KADe,kBAEfA,EAAKC,SAFU,2CAAH,sDAMV7B,EAAe,mCAAG,WAAMU,GAAN,yFAENiB,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4Ef,EAA5E,+CAFM,uBAEpBkB,EAFoB,EAEpBA,KAFoB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["components/Movies/Movies.jsx","pages/FilmList/FilmList.jsx","servise.jsx"],"sourcesContent":["import { Suspense } from \"react\"\nimport {useSearchParams} from \"react-router-dom\"\nimport {useEffect, useState } from \"react\"\nimport {getSearchMovies} from \"../../servise\"\nimport \"../Movies/Movies.css\"\nimport  FilmList  from \"pages/FilmList/FilmList\"\n\n const Movies = () => {\n    const [searchName, setSearchName] = useState([])\n    const [searchParam, setSearchParams] = useSearchParams()\n    const productName = searchParam.get(\"query\") ?? \"\"\n   \n   useEffect(() => {\n\n      const  fetchMoviesName = async () => {\n        try{\n          const movies = await getSearchMovies(productName)\n          setSearchName(movies)\n        }\n        catch(err) {\n          console.log(err)\n        }\n      }\n      fetchMoviesName()\n    },[productName])\n\n    const handleSubmit = e => {\n      e.preventDefault()\n      setSearchParams({query: e.target.value})\n     }\n\n    return (\n      <Suspense fallback={<div>Loading...</div>}>\n        <div className=\"movies_input\">\n        <form onSubmit={() => handleSubmit(productName)}>\n        <input\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"name movie\"\n        />\n\n        <button type=\"submit\" className=\"button_search\">Search</button>\n        </form>\n     \n\n      {<FilmList movies={searchName}/>}\n      </div>\n      </Suspense>\n    )\n}\n\nexport default Movies","\nimport {Link, useLocation} from \"react-router-dom\"\nimport \"./FilmList.css\"\n\n const FilmList = ({movies}) => {\n    const location = useLocation()\n    \n    return(\n        <>\n        {movies.map(({id, original_title, name}) => {\n            return (\n                <ul key={id}>\n                    <li><Link to={`/movies/${id}`} state={{from: location}} className=\"link\">{original_title || name}</Link></li>\n                </ul>\n            )\n        })}\n        </>\n    )\n}\nexport default FilmList","import axios from \"axios\"\n\nconst KEY = \"0374e7ed31d5e8507eaf6ae86e4e0e15\"\n\n\nexport const getTrendingMovies = async() => {\n const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n return data.results\n}\n\nexport const getMoviesId = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US` )\n    return data \n}\n\nexport const getCast = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n   \n    return data.cast\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return data.results\n\n}\n\nexport const getSearchMovies = async query => {\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`)\n  \n    // console.log('nameMovie', data.results)\n    return data.results\n}\n\n\n"],"names":["useState","searchName","setSearchName","useSearchParams","searchParam","setSearchParams","productName","get","useEffect","fetchMoviesName","getSearchMovies","movies","console","log","Suspense","fallback","className","onSubmit","e","preventDefault","query","target","value","type","name","placeholder","FilmList","location","useLocation","map","id","original_title","to","state","from","KEY","getTrendingMovies","axios","data","results","getMoviesId","movieId","getCast","cast","getReviews"],"sourceRoot":""}